AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a service on AWS Fargate, hosted in a private subnet, but accessible via a public load balancer.
Parameters:
  ServiceName:
    Type: String
    Description: A name for the service
  ContainerPort:
    Type: Number
    Default: 5000
    Description: What port number the application inside the docker container is binding to
  Path:
    Type: String
    Default: "/example"
    Description: A path on the public load balancer that this service
                 should be connected to. Use * to send all load balancer
                 traffic to this service.
  Priority:
    Type: Number
    Default: 2
    Description: The priority for the routing rule added to the load balancer.
                 This only applies if your have multiple services which have been
                 assigned to different paths on the load balancer.
  ContainerCpu:
    Type: Number
    Default: 256
    Description: How much CPU to give the container. 1024 is 1 CPU
  ContainerMemory:
    Type: Number
    Default: 512
    Description: How much memory in megabytes to give the container
  DesiredCount:
    Type: Number
    Default: 2
    Description: How many copies of the service task to run
  ImageUrl:
    Type: String
    Default: nginx
    Description: The url of a docker image that contains the application process that
                 will handle the traffic for this service

  ClusterName:
    Type:  'AWS::SSM::Parameter::Value<String>'
    Default: '/DevTools/ClusterName'
  FargateContainerSecurityGroup:
    Type:  'AWS::SSM::Parameter::Value<String>'
    Default: '/DevTools/FargateContainerSecurityGroup'
  ECSTaskExecutionRole:
    Type:  'AWS::SSM::Parameter::Value<String>'
    Default: '/DevTools/ECSTaskExecutionRole'
  PrivateSubnetOne:
    Type:  'AWS::SSM::Parameter::Value<String>'
    Default: '/DevTools/PrivateSubnetOne'
  PrivateSubnetTwo:
    Type:  'AWS::SSM::Parameter::Value<String>'
    Default: '/DevTools/PrivateSubnetTwo'
  VPCId:
    Type:  'AWS::SSM::Parameter::Value<String>'
    Default: '/DevTools/VPCId'
  PublicListener:
    Type:  'AWS::SSM::Parameter::Value<String>'
    Default: '/DevTools/PublicListener'


Resources:

  #-----------------------------------------------------------------------------#
  # CodeCommit
  #-----------------------------------------------------------------------------#
  Repository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Ref ServiceName
      RepositoryDescription: !Ref ServiceName

  #-----------------------------------------------------------------------------#
  # ECR
  #-----------------------------------------------------------------------------#
  ECR:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref ServiceName
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          -
            Sid: AllowPushPull
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:root
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - ecr:*



  # The task definition. This is a simple metadata description of what
  # container to run, and what resource requirements it has.
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref 'ServiceName'
      Cpu: !Ref 'ContainerCpu'
      Memory: !Ref 'ContainerMemory'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      ContainerDefinitions:
        - Name: !Sub task-${ServiceName}
          Cpu: !Ref 'ContainerCpu'
          Memory: !Ref 'ContainerMemory'
          Image: !Ref ImageUrl
          PortMappings:
            - ContainerPort: !Ref 'ContainerPort'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-create-group: "true"
              awslogs-region: !Sub "${AWS::Region}"
              awslogs-group: !Sub "${ServiceName}"
              awslogs-stream-prefix: !Sub "${ServiceName}"

  # The service. The service is a resource which allows you to run multiple
  # copies of a type of task, and gather up their logs and metrics, as well
  # as monitor the number of running tasks and replace any that have crashed
  Service:
    Type: AWS::ECS::Service
    DependsOn: LoadBalancerRule
    Properties:
      ServiceName: !Ref 'ServiceName'
      Cluster: !Ref ClusterName
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 75
      DesiredCount: !Ref 'DesiredCount'
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref FargateContainerSecurityGroup
          Subnets:
            - !Ref PrivateSubnetOne
            - !Ref PrivateSubnetTwo
      TaskDefinition: !Ref 'TaskDefinition'
      LoadBalancers:
        - ContainerName: !Sub task-${ServiceName}
          ContainerPort: !Ref 'ContainerPort'
          TargetGroupArn: !Ref 'TargetGroup'

  # A target group. This is used for keeping track of all the tasks, and
  # what IP addresses / port numbers they have. You can query it yourself,
  # to use the addresses yourself, but most often this target group is just
  # connected to an application load balancer, or network load balancer, so
  # it can automatically distribute traffic across all the targets.
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 6
      HealthCheckPath: "/"
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetType: ip
      Name: !Ref 'ServiceName'
      Port: !Ref 'ContainerPort'
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId: !Ref VPCId

  # Create a rule on the load balancer for routing traffic to the target group
  LoadBalancerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn: !Ref 'TargetGroup'
          Type: 'forward'
      Conditions:
        - Field: path-pattern
          Values: [!Ref 'Path']
      ListenerArn: !Ref PublicListener
      Priority: !Ref 'Priority'